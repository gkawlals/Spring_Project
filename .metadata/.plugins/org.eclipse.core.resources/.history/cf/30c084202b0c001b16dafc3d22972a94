package poly.service.impl;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;
import org.springframework.stereotype.Service;

import poly.persistance.mapper.IMovieMapper;

@Service("MovieService")
public class MovieService {
	
	@Resource(name="MoviceMapper")
	private IMovieMapper moviemapper;
	
	private Logger log = Logger.getLogger(this.getClass());
	
	@Override
	public int getMovieInfoFromWEB() throws Exception {
		
		log.info(this.getClass().getName() + ". getMovieInfoWEB Start!");
		
		int res = 0;// 0보다 크면 성공 
		
		//데이터를 가져올 사이트
		String url = "http://www.cgv.co.kr/movies/";
		//JSOUP을 통해 들어가 웹크롤링할 HTML의 소스를 저장할 변수 
		Document doc = null;
		
		//사이트접속 = https 프로토콜은 보안상 안된다 
		doc = Jsoup.connect(url).get();
		//CGV 웹페이지의 전체 소스중 일부 태그를 선택하기 위해 사용한다 
		//<div class="div.sect-movie-chart"> 이 태그내에 있는 HTML 소스만 element에 저장된다 
		Elements element = doc.select("div.sect-movie-chart");
		
		
		// Iterarot을 사용하여 영화순위 정보를 가져온다 
		// 영화순위는 기본적으로 1개이상의 영화가 존재하기 때문에 태그의 반복이 존재할수 있다. 
		Iterator<Element> movie_rank = element.select("strong.rank").iterator();

		Iterator<Element> movie_name = element.select("strong.title").iterator();

		Iterator<Element> movie_reserve = element.select("strong.percent span").iterator();

		Iterator<Element> open_day = element.select("span.txt-info").iterator();

		Iterator<Element> score = element.select("strong.percent").iterator();
				
	}
	
}
