/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-10-02 10:15:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import poly.dto.GongDto;
import poly.util.CmmUtil;
import poly.util.CmmUtil;

public final class gongji_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/view/user/top.jsp", Long.valueOf(1600151675000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("poly.util.CmmUtil");
    _jspx_imports_classes.add("poly.dto.GongDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List<GongDto> rList = (List<GongDto>) request.getAttribute("rList");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\">\r\n");
      out.write("</script>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- top 시작 -->\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");

    	String name = CmmUtil.nvl ((String)session.getAttribute("name"));
    
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div style=\"background-color: skyblue\">\r\n");
      out.write("\ttop!!!!!!!!!!!!!!!!!!!!!\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li>\r\n");
      out.write("\t\t\t");
if(name.isEmpty()){ 
      out.write(" \r\n");
      out.write("\t\t\t<a href=\"/user/userLogin.do\"> 로그인 </a>\r\n");
      out.write("\t\t\t");
 } else { 
      out.write(" \r\n");
      out.write("\t\t\t");
      out.print(name );
      out.write("님 환영합니다! <a href=\"/user/userLogout.do\"> 로그아웃 </a> \r\n");
      out.write("\t\t\t ");
} 
      out.write(" \r\n");
      out.write("\t\t</li>\r\n");
      out.write("\t\t<li>\r\n");
      out.write("\t\t\t <a href=\"/user/userinsert.do\"> 회원가입 </a>\r\n");
      out.write("\t\t</li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- top 끝 -->\r\n");
      out.write("<div class=\"gongjiList\">\r\n");
      out.write("<table border=\"1\" id=\"gongjiList\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>공지번호</td>\r\n");
      out.write("\t\t<td>공지 제목</td>\r\n");
      out.write("\t\t<td>작성자 </td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\t\t");

				for (GongDto e : rList) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(e.getGong_nm());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td><a href=\"/board/gonghjiDetail.do?no=");
      out.print(e.getGong_nm());
      out.write('"');
      out.write('>');
      out.print(e.getGong_tit());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(e.getGong_id());
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction search() {\r\n");
      out.write("\t\talert(\"test\");\r\n");
      out.write("\t\tvar gong_tit = $('#gong_txt').val();\r\n");
      out.write("\t\talert(\"제목 : \" + gong_tit);\r\n");
      out.write("\t\tif ($('#gong_tit').val() == \"\") {\r\n");
      out.write("\t\t\t$('#gong_tit').focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tconsole.log(\"gong_tit : \" + gong_txt);\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : '/board/searchGongji.do',\r\n");
      out.write("\t\t\ttype : 'post',\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\"gong_tit\" : gong_tit\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(\"test\");\r\n");
      out.write("\t\t\t\tconsole.log(data)\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar resHTML = \"\";\r\n");
      out.write("\t\t\t\tresHTML += '<tr>';\r\n");
      out.write("\t\t\t\tresHTML += '<td>공지 번호</td>';\r\n");
      out.write("\t\t\t\tresHTML += '<td>공지 글</td>';\r\n");
      out.write("\t\t\t\tresHTML += '<td>게시자</td>';\r\n");
      out.write("\t\t\t\tresHTML += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (data.length == 0) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tresHTML += '<tr>';\r\n");
      out.write("\t\t\t\t\tresHTML += '<td>-</td>';\r\n");
      out.write("\t\t\t\t\tresHTML += '<td>-</td>';\r\n");
      out.write("\t\t\t\t\tresHTML += '<td>-</td>';\r\n");
      out.write("\t\t\t\t\tresHTML += '</tr>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tresHTML += '<tr>';\r\n");
      out.write("\t\t\t\t\t\tresHTML += '<td>' + data[i].gong_nm + '</td>';\r\n");
      out.write("\t\t\t\t\t\tresHTML += '<td>' + data[i].gong_tit + '</td>';\r\n");
      out.write("\t\t\t\t\t\tresHTML += '<td>' + data[i].gong_id + '</td>';\r\n");
      out.write("\t\t\t\t\t\tresHTML += '</tr>';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$(\"#searchGongji\").html(resHTML);\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
